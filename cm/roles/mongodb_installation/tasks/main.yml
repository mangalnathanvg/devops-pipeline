---
  - name: Import the public key used by the package management system.
    shell: "wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -"

  - name: Create a list file for MongoDB.
    shell: "echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list"

  - name: Upgrade all packages on servers
    shell: "sudo apt-get update"

  - name: Install the MongoDB packages.
    shell: "sudo apt-get install -y mongodb-org"

  - name: Start service httpd, if not running
    shell: "sudo systemctl start mongod"

  - name: Check status of mongod
    shell: "sudo systemctl status mongod"

  - name: Install or update pip
    become: yes
    apt: pkg='python3-pip'

  - name: Install pymongo
    become: yes
    pip:
      name: pymongo
      state: latest

  - name: Create MongoDB user
    mongodb_user:
      database: admin
      name: "{{ MONGO_USER }}"
      password: "{{ MONGO_PASSWORD }}"
      roles: readWrite
      state: present

  - name: set APP_PORT
    become: yes
    lineinfile:
      path: /etc/environment
      line: APP_PORT={{APP_PORT}}
      regex: "^APP_PORT="
      state: present

  - name: set MONGO_PORT
    lineinfile:
      dest: /etc/environment
      line: MONGO_PORT={{MONGO_PORT}}
      regexp: "^MONGO_PORT="
      state: present
    become: yes

  - name: set MONGO_USER
    lineinfile:
      dest: /etc/environment
      line: MONGO_USER={{MONGO_USER}}
      regexp: "^MONGO_USER="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_PASSWORD={{MONGO_PASSWORD}}
      regexp: "^MONGO_PASSWORD="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_IP={{MONGO_IP}}
      regexp: "^MONGO_IP="
      state: present
    become: yes

  - name: Install latest package
    become: yes
    with_items:
      - nodejs
      - nginx
      - git
    apt:
      name: '{{item}}'
      state: latest
      update_cache: yes
      force: yes

  - name: Setting the environment.
    shell: . /etc/environment
    become: yes
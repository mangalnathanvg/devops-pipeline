- job:
    name: itrust-pipeline-build
    project-type: pipeline
    dsl: |
      node {
        stage('Pre-Build'){
          cleanWs()
          sh '. /etc/environment'
          sh 'export APP_PORT=$APP_PORT'
          sh 'export MONGO_PORT=$MONGO_PORT'
          sh 'export MONGO_USER=$MONGO_USER'
          sh 'export MONGO_PASSWORD=$MONGO_PASSWORD'
          sh 'export MONGO_IP=$MONGO_IP'
          sh 'export GIT_USERNAME=$GIT_USERNAME'
          sh 'export GIT_PASSWORD=$GIT_PASSWORD'
        }
        stage('Build'){
          sh 'git clone https://$GIT_USERNAME:$GIT_PASSWORD@github.ncsu.edu/engr-csc326-staff/iTrust2-v8.git'
          sh 'yes | cp /bakerx/cm/Ansible_Scripts/JinjaTemplates/pom.xml ./iTrust2-v8/iTrust2/pom.xml'
          sh 'yes | cp ./iTrust2-v8/iTrust2/src/main/resources/application.yml.template ./iTrust2-v8/iTrust2/src/main/resources/application.yml'
          sh 'sed -i \'s/    password:/    password: root/g\' ./iTrust2-v8/iTrust2/src/main/resources/application.yml'
        }
        stage('Test'){
          sh '(cd ./iTrust2-v8/iTrust2 && mvn clean test integration-test checkstyle:checkstyle)'
        }
        stage('CheckStyle'){
          sh 'cp ./iTrust2-v8/iTrust2/target/checkstyle-result.xml ./'
          recordIssues(tools: [checkStyle(reportEncoding: 'UTF-8')])
        }
        stage('Remove Database'){
          sh 'mysql -u root -p$DB_PASS < /bakerx/cm/Ansible_Scripts/JinjaTemplates/database.sql'
        }
        stage('Jacoco'){
          jacoco(
            execPattern: '**/target/coverage-reports/**.exec',
            classPattern: '**/target/classes',
            sourcePattern: '**/src',
            inclusionPattern: '**/*.class',
            changeBuildStatus: true,
            minimumBranchCoverage: '30',
            minimumInstructionCoverage: '60',
            minimumClassCoverage: '80',
            minimumMethodCoverage: '60'
          )
        }
      }

# For jacoco reference: https://stackoverflow.com/questions/41893846/jacoco-coverage-in-jenkins-pipeline
# For checkstyle: https://thecodeexamples.com/jenkins/how-to-configure-a-checkstyle-in-jenkins/
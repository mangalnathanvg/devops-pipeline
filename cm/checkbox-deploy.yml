---
- name: Deploy checkbox.io to running cloud instance.
  hosts: checkbox

  vars_files: 
    - ./vars/vars.yml

  tasks:

  - name: Upgrade all packages on servers
    shell: "sudo apt-get update"
  
  - name: Installing Nodejs
    apt: pkg='nodejs' state='present'
    become: yes

  - name: Install NPM
    apt: pkg='npm' state='present'
    become: yes

  - name: Install pm2 
    npm:
      name: pm2
      global: yes
    become: yes

  - name: Import the public key used by the package management system.
    shell: "wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -"

  - name: Create a list file for MongoDB.
    shell: 'echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list'

  - name: Upgrade all packages on servers
    shell: "apt-get update"
    become: yes

  - name: Install the MongoDB packages.
    shell: "apt-get install -y mongodb-org"
    become: yes 

  - name: Start service httpd, if not running
    shell: "systemctl start mongod"
    become: yes 
  
  - name: Check status of mongod
    shell: "systemctl status mongod"
    become: yes 

  - name: Install or update pip
    become: yes
    apt: pkg='python-pip'

  - name: Install or update pip3
    become: yes
    apt: pkg='python3-pip'

  - name: Install pymongo
    become: yes
    pip:
      name: pymongo
      state: latest

  - name: Create MongoDB user
    mongodb_user:
      database: admin
      name: "{{ MONGO_USER }}"
      password: "{{ MONGO_PASSWORD }}"
      roles: readWrite
      state: present

  - name: set APP_PORT
    become: yes
    lineinfile:
      path: /etc/environment
      line: APP_PORT={{APP_PORT}}
      regex: "^APP_PORT="
      state: present
    become: yes

  - name: set MONGO_PORT
    lineinfile:
      dest: /etc/environment
      line: MONGO_PORT={{MONGO_PORT}}
      regexp: "^MONGO_PORT="
      state: present
    become: yes

  - name: set MONGO_USER
    lineinfile:
      dest: /etc/environment
      line: MONGO_USER={{MONGO_USER}}
      regexp: "^MONGO_USER="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_PASSWORD={{MONGO_PASSWORD}}
      regexp: "^MONGO_PASSWORD="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_IP={{MONGO_IP}}
      regexp: "^MONGO_IP="
      state: present
    become: yes

  - name: Install latest package
    become: yes
    with_items:
      - nodejs
      - git
    apt:
      name: '{{item}}'
      state: latest
      update_cache: yes
      force: yes

  - name: Setting the environment.
    shell: . /etc/environment
    become: yes

  - name: Install nginx
    become: yes
    apt:
      name: nginx
      state: latest

  - name: Start nginx service
    service:
      name: nginx
      state: started
  
  - name: Clone checkbox repository
    become: yes
    git:
      repo: https://github.com/chrisparnin/checkbox.io.git
      dest: '/$HOME/checkbox'

  - name: Update nodejs and npm
    shell: |
      npm install -g n
      n latest
      npm install -g npm
      hash -d npm
      npm i
    become: yes

  - name: Install dependencies on the cloud provider.
    become: yes
    npm:
      path: '/$HOME/checkbox/server-side/site'

  - name: Delete old pm2 processes
    command: pm2 kill
    ignore_errors: yes

  - name: Start checkbox server using pm2
    command: pm2 start server.js --name checkbox.io
    args:
      chdir: '$HOME/checkbox/server-side/site'

  - name: Save service settings
    command: pm2 save
    become: true
    args:
      chdir: '$HOME/checkbox/server-side/site'

  - name: Copy nginx default file
    become: yes
    copy:
      src: '/$HOME/checkbox/local-conf/default'
      remote_src: yes
      dest: /etc/nginx/sites-available/
      owner: root
      group: root

  - name: Copy nginx.conf file
    become: yes
    copy:
      src: '/$HOME/checkbox/local-conf/nginx.conf'
      remote_src: yes
      dest: /etc/nginx/
      owner: root
      group: root

  - name: Getting the path of HOME directory
    shell: 'echo $HOME'
    register: home_path

  - name: Edit the root location
    become: yes
    lineinfile:
      dest: /etc/nginx/sites-available/default
      regexp: 'root /.*'
      line: '  root {{home_path.stdout}}/checkbox/public_html;'

  - name: Restart nginx
    become: yes
    systemd:
      name: nginx
      state: restarted
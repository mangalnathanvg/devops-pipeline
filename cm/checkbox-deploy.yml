---
- name: Deploy checkbox.io to running cloud instance.
  hosts: checkbox

  vars_files: 
    - ./vars/vars.yml

  tasks:

  - name: Upgrade all packages on servers
    shell: "apt update"
    become: yes

  - name: Resolve install errors if any
    shell: "rm /var/lib/dpkg/lock-frontend"
    become: yes

  - name: Installing Nodejs
    apt: pkg='nodejs' state='present'
    become: yes

  - name: Install NPM
    apt: pkg='npm' state='present'
    become: yes

  - name: Install pm2 
    npm:
      name: pm2
      global: yes
    become: yes

  - name: Import the public key used by the package management system.
    shell: "wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -"
    become: yes

  - name: Create a list file for MongoDB.
    shell: 'echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list'
    become: yes 

  - name: Upgrade all packages on servers
    shell: "apt-get update"
    become: yes

  - name: Install the MongoDB packages.
    shell: "apt-get install -y mongodb-org"
    become: yes 

  - name: Start service httpd, if not running
    shell: "systemctl start mongod"
    become: yes 
  
  - name: Check status of mongod
    shell: "systemctl status mongod"
    become: yes 

  - name: Install or update pip
    become: yes
    apt: pkg='python-pip'
    ignore_errors: yes

  - name: Install or update pip3
    become: yes
    apt: pkg='python3-pip'
    ignore_errors: yes

  - name: Install pymongo
    become: yes
    pip:
      name: pymongo
      state: latest

  - name: Create MongoDB user
    mongodb_user:
      database: admin
      name: "{{ MONGO_USER }}"
      password: "{{ MONGO_PASSWORD }}"
      roles: readWrite
      state: present

  - name: set APP_PORT
    become: yes
    lineinfile:
      path: /etc/environment
      line: APP_PORT={{APP_PORT}}
      regex: "^APP_PORT="
      state: present
    become: yes

  - name: set MONGO_PORT
    lineinfile:
      dest: /etc/environment
      line: MONGO_PORT={{MONGO_PORT}}
      regexp: "^MONGO_PORT="
      state: present
    become: yes

  - name: set MONGO_USER
    lineinfile:
      dest: /etc/environment
      line: MONGO_USER={{MONGO_USER}}
      regexp: "^MONGO_USER="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_PASSWORD={{MONGO_PASSWORD}}
      regexp: "^MONGO_PASSWORD="
      state: present
    become: yes

  - name: set MONGO_PASSWORD
    lineinfile:
      dest: /etc/environment
      line: MONGO_IP={{MONGO_IP}}
      regexp: "^MONGO_IP="
      state: present
    become: yes

  - name: Install latest package
    become: yes
    with_items:
      - nodejs
      - git
    apt:
      name: '{{item}}'
      state: latest
      update_cache: yes
      force: yes

  - name: Setting the environment.
    shell: . /etc/environment
    become: yes

  - name: Install nginx
    become: yes
    apt:
      name: nginx
      state: present

  - name: Start nginx service
    service:
      name: nginx
      state: started

  - name: Clone Checbox.io
    become: yes
    git: 
      repo: 'https://github.com/chrisparnin/checkbox.io.git'
      dest: '/checkbox'
      update: no

  - name: Installing Express
    become: yes
    apt:
      name: ['node-express-generator']
      state: present

  - name: Copying config file to nginx sites-available
    become: yes
    template:  
      src: default.conf.j2
      dest: '/etc/nginx/sites-available/checkbox'

  - name: Remove default file in nginx
    become: yes
    file:
      path: '/etc/nginx/sites-enabled/default'
      state: absent

  - name: Remove existing sites
    become: yes
    file:
      path: '/etc/nginx/sites-enabled/checkbox'
      state: absent

  - name: Enable checkbox configuration
    become: yes
    command: ln -s /etc/nginx/sites-available/checkbox /etc/nginx/sites-enabled/checkbox

  - name: Copy static content to be served by NGINX
    become: yes
    copy: 
      src: "/checkbox/public_html"
      dest: /usr/share/nginx/html
      remote_src: yes

  - name: Restart NGINX service
    become: yes
    service:
      state: restarted
      enabled: true
      name: nginx

  - name: Install checkbox packages
    become: yes
    npm:
      path: /checkbox
      state: latest

  - name: Update nodejs and npm before installing server packages.
    shell: |
      npm install -g n
      n latest
      npm install -g npm
      hash -d npm
      npm i
    become: yes
    ignore_errors: yes
    
  - name: Install server-side/site packages
    become: yes
    npm:
      path: /checkbox/server-side/site
      state: latest

  - name: Install forever
    become: yes
    shell: npm install forever -g
  
  - name: Kill existing forever processes
    become: yes
    shell: forever stopall

  - name: Start forever checkbox server
    become: yes
    shell: forever start server.js
    args:
      chdir: /checkbox/server-side/site